{"ast":null,"code":"var _jsxFileName = \"/app/frontend/src/components/RankingExport.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocalStorage } from '../hooks/useLocalStorage';\nimport { FileDown, Image, Layers, RefreshCw } from 'lucide-react';\nimport { formatCurrency, formatPercentage } from '../utils/dataParser';\nimport { calculateOrcadoPorAgencia, calculateRealizadoPorAgencia, calculateRealizadoPorCarteira, calculateAtingimento, getAtingimentoColor, getAtingimentoClass, groupByRede, sortByScoreMedio } from '../utils/calculations';\nimport { exportToPNG, exportAllRedes, THEME_VARIANTS } from '../utils/exportUtils';\nimport { toast } from 'sonner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RankingExport = () => {\n  _s();\n  const [produtos] = useLocalStorage('challenge_produtos', []);\n  const [carteiras] = useLocalStorage('carteiras_master', []);\n  const [orcadosPorTipo] = useLocalStorage('orcados_por_tipo', []);\n  const [orcadosPorCarteira] = useLocalStorage('orcados_por_carteira', []);\n  const [redes] = useLocalStorage('redes', []);\n  const [realizadosTipo] = useLocalStorage('realizados_tipo', []);\n  const [realizadosCarteira] = useLocalStorage('realizados_carteira', []);\n  const [realizadosDiariosTipo] = useLocalStorage('realizados_tipo_diarios', []);\n  const [realizadosDiariosCarteira] = useLocalStorage('realizados_carteira_diarios', []);\n  const [diasDesafio] = useLocalStorage('challenge_dias', 30);\n  const [unidade, setUnidade] = useState('agencia');\n  const [nomeDesafio, setNomeDesafio] = useLocalStorage('nome_desafio', ''); // Auto-save no localStorage\n  const [temaIndex, setTemaIndex] = useState(0);\n  const [baseCalculo, setBaseCalculo] = useState('carteira');\n  const [rankingData, setRankingData] = useState([]);\n  const [diaFiltro, setDiaFiltro] = useState(null);\n  const hasCarteirasData = realizadosCarteira.length > 0;\n  const tema = THEME_VARIANTS[temaIndex];\n  const produtosRanking = [...produtos];\n  if (produtos.includes('Vida')) {\n    const vidaIndex = produtosRanking.indexOf('Vida');\n    produtosRanking[vidaIndex] = 'Vida Total';\n  }\n\n  // Calcula tamanhos dinâmicos baseado no número de produtos\n  const numProdutos = unidade === 'agencia' ? produtosRanking.length : 1;\n  const numColunas = 3 + numProdutos * 3; // Posição, Prefixo, Dependência + (Orçado + Realizado + % para cada produto)\n\n  // Ajusta tamanho de fonte e padding baseado no número de produtos\n  const getFontSize = () => {\n    if (numProdutos <= 3) return '14px';\n    if (numProdutos <= 5) return '12px';\n    return '10px';\n  };\n  const getPadding = () => {\n    if (numProdutos <= 3) return '12px';\n    if (numProdutos <= 5) return '10px';\n    return '8px';\n  };\n  const getHeaderFontSize = () => {\n    if (numProdutos <= 3) return '42px';\n    if (numProdutos <= 5) return '36px';\n    return '32px';\n  };\n  const getSubHeaderFontSize = () => {\n    if (numProdutos <= 3) return '28px';\n    if (numProdutos <= 5) return '24px';\n    return '20px';\n  };\n  const fontSize = getFontSize();\n  const padding = getPadding();\n  const headerFontSize = getHeaderFontSize();\n  const subHeaderFontSize = getSubHeaderFontSize();\n  const calculateRanking = () => {\n    if (unidade === 'agencia') {\n      const prefixosUnicos = [...new Set(carteiras.map(c => c.prefixo).filter(Boolean))];\n      const rankings = prefixosUnicos.map(prefixo => {\n        var _carteirasPrefixo$;\n        const carteirasPrefixo = carteiras.filter(c => c.prefixo === prefixo);\n        const agencia = ((_carteirasPrefixo$ = carteirasPrefixo[0]) === null || _carteirasPrefixo$ === void 0 ? void 0 : _carteirasPrefixo$.agencia) || prefixo;\n        const redeInfo = redes.find(r => r.prefixo === prefixo);\n        const rede = (redeInfo === null || redeInfo === void 0 ? void 0 : redeInfo.rede) || 'Sem Rede';\n        const useCarteiraBase = baseCalculo === 'carteira' && orcadosPorCarteira.length > 0;\n        const orcado = calculateOrcadoPorAgencia(prefixo, carteiras, orcadosPorTipo, orcadosPorCarteira, useCarteiraBase);\n        const atingimentos = {};\n        const valores = {};\n        const orcadosPorProduto = {};\n\n        // Calcular orçado por produto\n        // Primeiro, contar quantas carteiras de cada tipo esta agência tem\n        const tiposCount = {};\n        carteirasPrefixo.forEach(cart => {\n          const tipo = cart.tipoCarteira;\n          if (tipo) {\n            tiposCount[tipo] = (tiposCount[tipo] || 0) + 1;\n          }\n        });\n        produtosRanking.forEach(produto => {\n          // Calcular orçado para este produto específico\n          let orcadoProduto = 0;\n\n          // Mapear \"Vida Total\" para \"Vida\" nos orçamentos\n          const produtoBusca = produto === 'Vida Total' ? 'Vida' : produto;\n\n          // Para cada tipo de carteira, multiplicar orçado × quantidade\n          Object.entries(tiposCount).forEach(([tipo, qtd]) => {\n            const orcadoTipo = orcadosPorTipo.find(o => o.tipoCarteira === tipo && o.produto === produtoBusca);\n            if (orcadoTipo) {\n              orcadoProduto += (parseFloat(orcadoTipo.valor) || 0) * qtd;\n            }\n          });\n          orcadosPorProduto[produto] = orcadoProduto;\n\n          // Usa realizadosDiariosTipo se houver dados, senão usa realizadosTipo\n          let realizado = 0;\n          if (realizadosDiariosTipo.length > 0) {\n            // Soma todos os dias salvos até diaFiltro para este prefixo e produto\n            const diaLimite = diaFiltro || diasDesafio;\n            realizado = realizadosDiariosTipo.filter(r => r.prefixo === prefixo && r.produto === produto && r.dia <= diaLimite).reduce((sum, r) => sum + (parseFloat(r.valor) || 0), 0);\n\n            // Se for Vida Total, soma Vida + Vidinha\n            if (produto === 'Vida Total') {\n              const vida = realizadosDiariosTipo.filter(r => r.prefixo === prefixo && r.produto === 'Vida' && r.dia <= diaLimite).reduce((sum, r) => sum + (parseFloat(r.valor) || 0), 0);\n              const vidinha = realizadosDiariosTipo.filter(r => r.prefixo === prefixo && r.produto === 'Vidinha' && r.dia <= diaLimite).reduce((sum, r) => sum + (parseFloat(r.valor) || 0), 0);\n              realizado = vida + vidinha;\n            }\n          } else {\n            // Fallback para realizadosTipo (compatibilidade)\n            realizado = calculateRealizadoPorAgencia(prefixo, produto, realizadosTipo, diaFiltro);\n          }\n          valores[produto] = realizado;\n          atingimentos[produto] = calculateAtingimento(realizado, orcadoProduto);\n        });\n        return {\n          prefixo,\n          agencia,\n          rede,\n          orcado,\n          valores,\n          atingimentos,\n          orcadosPorProduto\n        };\n      });\n      return sortByScoreMedio(rankings);\n    } else {\n      const rankingsCarteira = [];\n      carteiras.forEach(c => {\n        const redeInfo = redes.find(r => r.prefixo === c.prefixo);\n        const rede = (redeInfo === null || redeInfo === void 0 ? void 0 : redeInfo.rede) || 'Sem Rede';\n        const orcadoCarteira = orcadosPorCarteira.find(o => o.prefixo === c.prefixo && o.carteira === c.carteira);\n        const orcado = orcadoCarteira ? orcadoCarteira.valor * (orcadoCarteira.fatorMeta || 100) / 100 : 0;\n\n        // Usa realizadosDiariosCarteira se houver dados, senão usa realizadosCarteira\n        let realizado = 0;\n        if (realizadosDiariosCarteira.length > 0) {\n          // Soma todos os dias salvos até diaFiltro para esta carteira\n          const diaLimite = diaFiltro || diasDesafio;\n          realizado = realizadosDiariosCarteira.filter(r => r.prefixo === c.prefixo && r.carteira === c.carteira && r.dia <= diaLimite).reduce((sum, r) => sum + (parseFloat(r.valor) || 0), 0);\n        } else {\n          // Fallback para realizadosCarteira (compatibilidade)\n          realizado = calculateRealizadoPorCarteira(c.prefixo, c.carteira, realizadosCarteira, diaFiltro);\n        }\n        const atingimento = calculateAtingimento(realizado, orcado);\n        rankingsCarteira.push({\n          prefixo: c.prefixo,\n          agencia: c.agencia,\n          carteira: c.carteira,\n          rede,\n          orcado,\n          valores: {\n            Total: realizado\n          },\n          atingimentos: {\n            Total: atingimento\n          }\n        });\n      });\n      return sortByScoreMedio(rankingsCarteira);\n    }\n  };\n  const handleAtualizarRanking = () => {\n    const data = calculateRanking();\n    setRankingData(data);\n    toast.success('Ranking atualizado!');\n  };\n  const handleExportPNGGeral = async () => {\n    await exportToPNG('ranking-export-all', `ranking-geral-${nomeDesafio || 'desafio'}.png`);\n    toast.success('Exportação concluída!');\n  };\n  const handleExportPNGRedes = async () => {\n    const redesUnicas = [...new Set(redes.map(r => r.rede).filter(Boolean))];\n    if (redesUnicas.length === 0) {\n      toast.error('Nenhuma rede configurada');\n      return;\n    }\n    await exportAllRedes(redesUnicas);\n    toast.success('Exportação de todas as redes concluída!');\n  };\n  useEffect(() => {\n    if (carteiras.length > 0) {\n      handleAtualizarRanking();\n    }\n  }, [unidade, baseCalculo, diaFiltro]);\n  const redesAgrupadas = groupByRede(rankingData, redes);\n  const redesUnicas = Object.keys(redesAgrupadas);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bb-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bb-card-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"bb-card-title\",\n          \"data-testid\": \"ranking-export-title\",\n          children: \"Campo 8 \\u2014 Ranking & Exporta\\xE7\\xE3o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"bb-card-subtitle\",\n          children: \"Configure, visualize e exporte o ranking do desafio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))',\n          gap: '16px',\n          marginBottom: '24px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginBottom: '8px',\n              fontWeight: 600,\n              color: 'var(--bb-gray-700)',\n              fontSize: '14px'\n            },\n            children: \"Unidade do Ranking:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: unidade,\n            onChange: e => setUnidade(e.target.value),\n            className: \"bb-input\",\n            \"data-testid\": \"unidade-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"agencia\",\n              children: \"Ag\\xEAncia (Prefixo)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"carteiras\",\n              disabled: !hasCarteirasData,\n              children: [\"Carteiras \", !hasCarteirasData ? '(sem dados)' : '']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginBottom: '8px',\n              fontWeight: 600,\n              color: 'var(--bb-gray-700)',\n              fontSize: '14px'\n            },\n            children: \"Nome do Desafio:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: nomeDesafio,\n            onChange: e => setNomeDesafio(e.target.value),\n            className: \"bb-input\",\n            placeholder: \"Ex: Desafio Q1 2025\",\n            \"data-testid\": \"nome-desafio-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginBottom: '8px',\n              fontWeight: 600,\n              color: 'var(--bb-gray-700)',\n              fontSize: '14px'\n            },\n            children: \"Tema Visual:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: temaIndex,\n            onChange: e => setTemaIndex(parseInt(e.target.value)),\n            className: \"bb-input\",\n            \"data-testid\": \"tema-select\",\n            children: THEME_VARIANTS.map((t, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: idx,\n              children: t.name\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), unidade === 'agencia' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginBottom: '8px',\n              fontWeight: 600,\n              color: 'var(--bb-gray-700)',\n              fontSize: '14px'\n            },\n            children: \"Base de C\\xE1lculo:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: baseCalculo,\n            onChange: e => setBaseCalculo(e.target.value),\n            className: \"bb-input\",\n            \"data-testid\": \"base-calculo-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"carteira\",\n              children: \"Por Carteira\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"tipo\",\n              children: \"Por Tipo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginBottom: '8px',\n              fontWeight: 600,\n              color: 'var(--bb-gray-700)',\n              fontSize: '14px'\n            },\n            children: \"Filtrar at\\xE9 o Dia:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: diaFiltro || '',\n            onChange: e => setDiaFiltro(e.target.value ? parseInt(e.target.value) : null),\n            className: \"bb-input\",\n            \"data-testid\": \"dia-filtro-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Todos os dias\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 15\n            }, this), Array.from({\n              length: diasDesafio\n            }, (_, i) => i + 1).map(dia => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: dia,\n              children: [\"At\\xE9 Dia \", dia]\n            }, dia, true, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexWrap: 'wrap',\n          gap: '12px',\n          marginBottom: '24px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAtualizarRanking,\n          className: \"bb-btn bb-btn-primary\",\n          \"data-testid\": \"atualizar-ranking-btn\",\n          children: [/*#__PURE__*/_jsxDEV(RefreshCw, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this), \"Atualizar Ranking\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleExportPNGGeral,\n          className: \"bb-btn bb-btn-secondary\",\n          disabled: rankingData.length === 0,\n          \"data-testid\": \"export-png-geral-btn\",\n          children: [/*#__PURE__*/_jsxDEV(Image, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this), \"Exportar PNG (Geral)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleExportPNGRedes,\n          className: \"bb-btn bb-btn-secondary\",\n          disabled: redesUnicas.length === 0,\n          \"data-testid\": \"export-png-redes-btn\",\n          children: [/*#__PURE__*/_jsxDEV(Layers, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 13\n          }, this), \"Exportar PNG (Todas as Redes)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), rankingData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"ranking-export-all\",\n      className: \"export-container\",\n      style: {\n        background: 'white',\n        padding: numProdutos > 5 ? '20px' : '40px',\n        borderRadius: '12px',\n        width: 'fit-content',\n        minWidth: '100%'\n      },\n      children: redesUnicas.map(rede => {\n        const dadosRede = redesAgrupadas[rede] || [];\n        if (dadosRede.length === 0) return null;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          id: `ranking-rede-${rede.replace(/\\s+/g, '-')}`,\n          style: {\n            marginBottom: '48px',\n            pageBreakAfter: 'always'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              background: tema.headerBg,\n              color: tema.headerColor,\n              padding: numProdutos > 5 ? '24px 20px' : '32px 24px',\n              borderRadius: '12px 12px 0 0',\n              marginBottom: '0'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              style: {\n                fontSize: headerFontSize,\n                fontWeight: '700',\n                marginBottom: '12px',\n                textAlign: 'center',\n                lineHeight: '1.2'\n              },\n              children: nomeDesafio || 'Ranking de Desafios de Seguridade'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: subHeaderFontSize,\n                fontWeight: '600',\n                textAlign: 'center',\n                color: tema.accentColor,\n                lineHeight: '1.3'\n              },\n              children: [\"Rede \", rede]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              overflowX: 'auto',\n              border: '2px solid #e8eef7',\n              borderTop: 'none',\n              borderRadius: '0 0 12px 12px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              style: {\n                width: '100%',\n                borderCollapse: 'collapse',\n                background: 'white',\n                fontSize\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  style: {\n                    background: 'var(--bb-blue)',\n                    color: 'white'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    style: {\n                      padding,\n                      textAlign: 'left',\n                      fontSize,\n                      fontWeight: '600',\n                      position: 'sticky',\n                      top: 0,\n                      background: 'var(--bb-blue)',\n                      whiteSpace: 'nowrap'\n                    },\n                    children: \"Pos.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 397,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    style: {\n                      padding,\n                      textAlign: 'left',\n                      fontSize,\n                      fontWeight: '600',\n                      position: 'sticky',\n                      top: 0,\n                      background: 'var(--bb-blue)',\n                      whiteSpace: 'nowrap'\n                    },\n                    children: \"Prefixo\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 398,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    style: {\n                      padding,\n                      textAlign: 'left',\n                      fontSize,\n                      fontWeight: '600',\n                      position: 'sticky',\n                      top: 0,\n                      background: 'var(--bb-blue)',\n                      whiteSpace: 'nowrap'\n                    },\n                    children: \"Depend\\xEAncia\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 399,\n                    columnNumber: 25\n                  }, this), unidade === 'carteiras' && /*#__PURE__*/_jsxDEV(\"th\", {\n                    style: {\n                      padding,\n                      textAlign: 'left',\n                      fontSize,\n                      fontWeight: '600',\n                      position: 'sticky',\n                      top: 0,\n                      background: 'var(--bb-blue)',\n                      whiteSpace: 'nowrap'\n                    },\n                    children: \"Carteira\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 401,\n                    columnNumber: 27\n                  }, this), (unidade === 'agencia' ? produtosRanking : ['Total']).map((produto, pIdx) => {\n                    // Cores mais escuras para os cabeçalhos dos produtos\n                    const headerCores = ['#1976d2',\n                    // Azul\n                    '#f57c00',\n                    // Laranja\n                    '#388e3c',\n                    // Verde\n                    '#7b1fa2',\n                    // Roxo\n                    '#fbc02d',\n                    // Amarelo\n                    '#c2185b',\n                    // Rosa\n                    '#00796b' // Ciano\n                    ];\n                    const headerBg = headerCores[pIdx % headerCores.length];\n                    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          padding,\n                          textAlign: 'right',\n                          fontSize,\n                          fontWeight: '600',\n                          position: 'sticky',\n                          top: 0,\n                          background: headerBg,\n                          whiteSpace: 'nowrap'\n                        },\n                        children: [produto, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 419,\n                          columnNumber: 42\n                        }, this), \"Or\\xE7ado\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 418,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          padding,\n                          textAlign: 'right',\n                          fontSize,\n                          fontWeight: '600',\n                          position: 'sticky',\n                          top: 0,\n                          background: headerBg,\n                          whiteSpace: 'nowrap'\n                        },\n                        children: [produto, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 422,\n                          columnNumber: 42\n                        }, this), \"Realizado\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 421,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          padding,\n                          textAlign: 'right',\n                          fontSize,\n                          fontWeight: '600',\n                          position: 'sticky',\n                          top: 0,\n                          background: headerBg,\n                          whiteSpace: 'nowrap'\n                        },\n                        children: [produto, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 425,\n                          columnNumber: 42\n                        }, this), \"%\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 424,\n                        columnNumber: 31\n                      }, this)]\n                    }, produto, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 417,\n                      columnNumber: 29\n                    }, this);\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 396,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: dadosRede.map((item, idx) => {\n                  // Cores alternadas mais visíveis para as linhas\n                  const rowBgColor = idx % 2 === 0 ? '#ffffff' : '#f0f4f8';\n\n                  // Array de cores suaves para cada produto\n                  const produtoCores = [{\n                    bg: '#e3f2fd',\n                    bgAlt: '#d1e7f7'\n                  },\n                  // Azul claro\n                  {\n                    bg: '#fff3e0',\n                    bgAlt: '#ffe4c4'\n                  },\n                  // Laranja claro\n                  {\n                    bg: '#e8f5e9',\n                    bgAlt: '#d4ead5'\n                  },\n                  // Verde claro\n                  {\n                    bg: '#f3e5f5',\n                    bgAlt: '#e1d4e3'\n                  },\n                  // Roxo claro\n                  {\n                    bg: '#fff9c4',\n                    bgAlt: '#ffeb99'\n                  },\n                  // Amarelo claro\n                  {\n                    bg: '#fce4ec',\n                    bgAlt: '#f8d0dd'\n                  },\n                  // Rosa claro\n                  {\n                    bg: '#e0f2f1',\n                    bgAlt: '#c8e6e4'\n                  } // Ciano claro\n                  ];\n                  return /*#__PURE__*/_jsxDEV(\"tr\", {\n                    style: {\n                      borderBottom: '1px solid #e8eef7',\n                      background: rowBgColor\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      style: {\n                        padding,\n                        fontSize,\n                        fontWeight: '600',\n                        background: rowBgColor\n                      },\n                      children: [idx + 1, \"\\xBA\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 450,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      style: {\n                        padding,\n                        fontSize,\n                        background: rowBgColor\n                      },\n                      children: item.prefixo\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 451,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      style: {\n                        padding,\n                        fontSize,\n                        background: rowBgColor\n                      },\n                      children: item.agencia\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 452,\n                      columnNumber: 29\n                    }, this), unidade === 'carteiras' && /*#__PURE__*/_jsxDEV(\"td\", {\n                      style: {\n                        padding,\n                        fontSize,\n                        background: rowBgColor\n                      },\n                      children: item.carteira\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 454,\n                      columnNumber: 31\n                    }, this), (unidade === 'agencia' ? produtosRanking : ['Total']).map((produto, pIdx) => {\n                      var _item$orcadosPorProdu;\n                      // Usa uma cor diferente para cada produto, com variação para linhas alternadas\n                      const corProduto = produtoCores[pIdx % produtoCores.length];\n                      const bgProduto = idx % 2 === 0 ? corProduto.bg : corProduto.bgAlt;\n                      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n                        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                          style: {\n                            padding,\n                            fontSize,\n                            textAlign: 'right',\n                            fontWeight: '600',\n                            background: bgProduto\n                          },\n                          children: formatCurrency(((_item$orcadosPorProdu = item.orcadosPorProduto) === null || _item$orcadosPorProdu === void 0 ? void 0 : _item$orcadosPorProdu[produto]) || 0)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 463,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          style: {\n                            padding,\n                            fontSize,\n                            textAlign: 'right',\n                            background: bgProduto\n                          },\n                          children: formatCurrency(item.valores[produto] || 0)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 472,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          style: {\n                            padding,\n                            fontSize,\n                            textAlign: 'right',\n                            fontWeight: '600',\n                            color: getAtingimentoColor(item.atingimentos[produto] || 0),\n                            background: bgProduto\n                          },\n                          children: formatPercentage(item.atingimentos[produto] || 0)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 480,\n                          columnNumber: 35\n                        }, this)]\n                      }, produto, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 462,\n                        columnNumber: 33\n                      }, this);\n                    })]\n                  }, idx, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 449,\n                    columnNumber: 27\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 17\n          }, this)]\n        }, rede, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 9\n    }, this), rankingData.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bb-card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '32px',\n          textAlign: 'center',\n          color: 'var(--bb-gray-600)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(FileDown, {\n          size: 48,\n          style: {\n            margin: '0 auto 16px',\n            opacity: 0.5\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: '16px'\n          },\n          children: \"Clique em \\\"Atualizar Ranking\\\" para gerar os dados\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 239,\n    columnNumber: 5\n  }, this);\n};\n_s(RankingExport, \"GjTNiqa+clOiqVOhzh8mA+R2VFA=\", false, function () {\n  return [useLocalStorage, useLocalStorage, useLocalStorage, useLocalStorage, useLocalStorage, useLocalStorage, useLocalStorage, useLocalStorage, useLocalStorage, useLocalStorage, useLocalStorage];\n});\n_c = RankingExport;\nexport default RankingExport;\nvar _c;\n$RefreshReg$(_c, \"RankingExport\");","map":{"version":3,"names":["React","useState","useEffect","useLocalStorage","FileDown","Image","Layers","RefreshCw","formatCurrency","formatPercentage","calculateOrcadoPorAgencia","calculateRealizadoPorAgencia","calculateRealizadoPorCarteira","calculateAtingimento","getAtingimentoColor","getAtingimentoClass","groupByRede","sortByScoreMedio","exportToPNG","exportAllRedes","THEME_VARIANTS","toast","jsxDEV","_jsxDEV","RankingExport","_s","produtos","carteiras","orcadosPorTipo","orcadosPorCarteira","redes","realizadosTipo","realizadosCarteira","realizadosDiariosTipo","realizadosDiariosCarteira","diasDesafio","unidade","setUnidade","nomeDesafio","setNomeDesafio","temaIndex","setTemaIndex","baseCalculo","setBaseCalculo","rankingData","setRankingData","diaFiltro","setDiaFiltro","hasCarteirasData","length","tema","produtosRanking","includes","vidaIndex","indexOf","numProdutos","numColunas","getFontSize","getPadding","getHeaderFontSize","getSubHeaderFontSize","fontSize","padding","headerFontSize","subHeaderFontSize","calculateRanking","prefixosUnicos","Set","map","c","prefixo","filter","Boolean","rankings","_carteirasPrefixo$","carteirasPrefixo","agencia","redeInfo","find","r","rede","useCarteiraBase","orcado","atingimentos","valores","orcadosPorProduto","tiposCount","forEach","cart","tipo","tipoCarteira","produto","orcadoProduto","produtoBusca","Object","entries","qtd","orcadoTipo","o","parseFloat","valor","realizado","diaLimite","dia","reduce","sum","vida","vidinha","rankingsCarteira","orcadoCarteira","carteira","fatorMeta","atingimento","push","Total","handleAtualizarRanking","data","success","handleExportPNGGeral","handleExportPNGRedes","redesUnicas","error","redesAgrupadas","keys","children","className","fileName","_jsxFileName","lineNumber","columnNumber","style","display","gridTemplateColumns","gap","marginBottom","fontWeight","color","value","onChange","e","target","disabled","type","placeholder","parseInt","t","idx","name","Array","from","_","i","flexWrap","onClick","size","id","background","borderRadius","width","minWidth","dadosRede","replace","pageBreakAfter","headerBg","headerColor","textAlign","lineHeight","accentColor","overflowX","border","borderTop","borderCollapse","position","top","whiteSpace","pIdx","headerCores","Fragment","item","rowBgColor","produtoCores","bg","bgAlt","borderBottom","_item$orcadosPorProdu","corProduto","bgProduto","margin","opacity","_c","$RefreshReg$"],"sources":["/app/frontend/src/components/RankingExport.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocalStorage } from '../hooks/useLocalStorage';\nimport { FileDown, Image, Layers, RefreshCw } from 'lucide-react';\nimport { formatCurrency, formatPercentage } from '../utils/dataParser';\nimport { \n  calculateOrcadoPorAgencia, \n  calculateRealizadoPorAgencia,\n  calculateRealizadoPorCarteira,\n  calculateAtingimento,\n  getAtingimentoColor,\n  getAtingimentoClass,\n  groupByRede,\n  sortByScoreMedio\n} from '../utils/calculations';\nimport { exportToPNG, exportAllRedes, THEME_VARIANTS } from '../utils/exportUtils';\nimport { toast } from 'sonner';\n\nconst RankingExport = () => {\n  const [produtos] = useLocalStorage('challenge_produtos', []);\n  const [carteiras] = useLocalStorage('carteiras_master', []);\n  const [orcadosPorTipo] = useLocalStorage('orcados_por_tipo', []);\n  const [orcadosPorCarteira] = useLocalStorage('orcados_por_carteira', []);\n  const [redes] = useLocalStorage('redes', []);\n  const [realizadosTipo] = useLocalStorage('realizados_tipo', []);\n  const [realizadosCarteira] = useLocalStorage('realizados_carteira', []);\n  const [realizadosDiariosTipo] = useLocalStorage('realizados_tipo_diarios', []);\n  const [realizadosDiariosCarteira] = useLocalStorage('realizados_carteira_diarios', []);\n  const [diasDesafio] = useLocalStorage('challenge_dias', 30);\n\n  const [unidade, setUnidade] = useState('agencia');\n  const [nomeDesafio, setNomeDesafio] = useLocalStorage('nome_desafio', ''); // Auto-save no localStorage\n  const [temaIndex, setTemaIndex] = useState(0);\n  const [baseCalculo, setBaseCalculo] = useState('carteira');\n  const [rankingData, setRankingData] = useState([]);\n  const [diaFiltro, setDiaFiltro] = useState(null);\n\n  const hasCarteirasData = realizadosCarteira.length > 0;\n  const tema = THEME_VARIANTS[temaIndex];\n\n  const produtosRanking = [...produtos];\n  if (produtos.includes('Vida')) {\n    const vidaIndex = produtosRanking.indexOf('Vida');\n    produtosRanking[vidaIndex] = 'Vida Total';\n  }\n\n  // Calcula tamanhos dinâmicos baseado no número de produtos\n  const numProdutos = unidade === 'agencia' ? produtosRanking.length : 1;\n  const numColunas = 3 + (numProdutos * 3); // Posição, Prefixo, Dependência + (Orçado + Realizado + % para cada produto)\n  \n  // Ajusta tamanho de fonte e padding baseado no número de produtos\n  const getFontSize = () => {\n    if (numProdutos <= 3) return '14px';\n    if (numProdutos <= 5) return '12px';\n    return '10px';\n  };\n  \n  const getPadding = () => {\n    if (numProdutos <= 3) return '12px';\n    if (numProdutos <= 5) return '10px';\n    return '8px';\n  };\n  \n  const getHeaderFontSize = () => {\n    if (numProdutos <= 3) return '42px';\n    if (numProdutos <= 5) return '36px';\n    return '32px';\n  };\n  \n  const getSubHeaderFontSize = () => {\n    if (numProdutos <= 3) return '28px';\n    if (numProdutos <= 5) return '24px';\n    return '20px';\n  };\n  \n  const fontSize = getFontSize();\n  const padding = getPadding();\n  const headerFontSize = getHeaderFontSize();\n  const subHeaderFontSize = getSubHeaderFontSize();\n\n  const calculateRanking = () => {\n    if (unidade === 'agencia') {\n      const prefixosUnicos = [...new Set(carteiras.map(c => c.prefixo).filter(Boolean))];\n      \n      const rankings = prefixosUnicos.map(prefixo => {\n        const carteirasPrefixo = carteiras.filter(c => c.prefixo === prefixo);\n        const agencia = carteirasPrefixo[0]?.agencia || prefixo;\n        const redeInfo = redes.find(r => r.prefixo === prefixo);\n        const rede = redeInfo?.rede || 'Sem Rede';\n\n        const useCarteiraBase = baseCalculo === 'carteira' && orcadosPorCarteira.length > 0;\n        const orcado = calculateOrcadoPorAgencia(prefixo, carteiras, orcadosPorTipo, orcadosPorCarteira, useCarteiraBase);\n\n        const atingimentos = {};\n        const valores = {};\n        const orcadosPorProduto = {};\n\n        // Calcular orçado por produto\n        // Primeiro, contar quantas carteiras de cada tipo esta agência tem\n        const tiposCount = {};\n        carteirasPrefixo.forEach(cart => {\n          const tipo = cart.tipoCarteira;\n          if (tipo) {\n            tiposCount[tipo] = (tiposCount[tipo] || 0) + 1;\n          }\n        });\n        \n        produtosRanking.forEach(produto => {\n          // Calcular orçado para este produto específico\n          let orcadoProduto = 0;\n          \n          // Mapear \"Vida Total\" para \"Vida\" nos orçamentos\n          const produtoBusca = produto === 'Vida Total' ? 'Vida' : produto;\n          \n          // Para cada tipo de carteira, multiplicar orçado × quantidade\n          Object.entries(tiposCount).forEach(([tipo, qtd]) => {\n            const orcadoTipo = orcadosPorTipo.find(o => \n              o.tipoCarteira === tipo && o.produto === produtoBusca\n            );\n            if (orcadoTipo) {\n              orcadoProduto += (parseFloat(orcadoTipo.valor) || 0) * qtd;\n            }\n          });\n          \n          orcadosPorProduto[produto] = orcadoProduto;\n          \n          // Usa realizadosDiariosTipo se houver dados, senão usa realizadosTipo\n          let realizado = 0;\n          if (realizadosDiariosTipo.length > 0) {\n            // Soma todos os dias salvos até diaFiltro para este prefixo e produto\n            const diaLimite = diaFiltro || diasDesafio;\n            realizado = realizadosDiariosTipo\n              .filter(r => r.prefixo === prefixo && r.produto === produto && r.dia <= diaLimite)\n              .reduce((sum, r) => sum + (parseFloat(r.valor) || 0), 0);\n            \n            // Se for Vida Total, soma Vida + Vidinha\n            if (produto === 'Vida Total') {\n              const vida = realizadosDiariosTipo\n                .filter(r => r.prefixo === prefixo && r.produto === 'Vida' && r.dia <= diaLimite)\n                .reduce((sum, r) => sum + (parseFloat(r.valor) || 0), 0);\n              const vidinha = realizadosDiariosTipo\n                .filter(r => r.prefixo === prefixo && r.produto === 'Vidinha' && r.dia <= diaLimite)\n                .reduce((sum, r) => sum + (parseFloat(r.valor) || 0), 0);\n              realizado = vida + vidinha;\n            }\n          } else {\n            // Fallback para realizadosTipo (compatibilidade)\n            realizado = calculateRealizadoPorAgencia(prefixo, produto, realizadosTipo, diaFiltro);\n          }\n          \n          valores[produto] = realizado;\n          atingimentos[produto] = calculateAtingimento(realizado, orcadoProduto);\n        });\n\n        return {\n          prefixo,\n          agencia,\n          rede,\n          orcado,\n          valores,\n          atingimentos,\n          orcadosPorProduto\n        };\n      });\n\n      return sortByScoreMedio(rankings);\n    } else {\n      const rankingsCarteira = [];\n\n      carteiras.forEach(c => {\n        const redeInfo = redes.find(r => r.prefixo === c.prefixo);\n        const rede = redeInfo?.rede || 'Sem Rede';\n\n        const orcadoCarteira = orcadosPorCarteira.find(o => \n          o.prefixo === c.prefixo && o.carteira === c.carteira\n        );\n        const orcado = orcadoCarteira ? orcadoCarteira.valor * (orcadoCarteira.fatorMeta || 100) / 100 : 0;\n\n        // Usa realizadosDiariosCarteira se houver dados, senão usa realizadosCarteira\n        let realizado = 0;\n        if (realizadosDiariosCarteira.length > 0) {\n          // Soma todos os dias salvos até diaFiltro para esta carteira\n          const diaLimite = diaFiltro || diasDesafio;\n          realizado = realizadosDiariosCarteira\n            .filter(r => r.prefixo === c.prefixo && r.carteira === c.carteira && r.dia <= diaLimite)\n            .reduce((sum, r) => sum + (parseFloat(r.valor) || 0), 0);\n        } else {\n          // Fallback para realizadosCarteira (compatibilidade)\n          realizado = calculateRealizadoPorCarteira(c.prefixo, c.carteira, realizadosCarteira, diaFiltro);\n        }\n        \n        const atingimento = calculateAtingimento(realizado, orcado);\n\n        rankingsCarteira.push({\n          prefixo: c.prefixo,\n          agencia: c.agencia,\n          carteira: c.carteira,\n          rede,\n          orcado,\n          valores: { Total: realizado },\n          atingimentos: { Total: atingimento }\n        });\n      });\n\n      return sortByScoreMedio(rankingsCarteira);\n    }\n  };\n\n  const handleAtualizarRanking = () => {\n    const data = calculateRanking();\n    setRankingData(data);\n    toast.success('Ranking atualizado!');\n  };\n\n  const handleExportPNGGeral = async () => {\n    await exportToPNG('ranking-export-all', `ranking-geral-${nomeDesafio || 'desafio'}.png`);\n    toast.success('Exportação concluída!');\n  };\n\n  const handleExportPNGRedes = async () => {\n    const redesUnicas = [...new Set(redes.map(r => r.rede).filter(Boolean))];\n    if (redesUnicas.length === 0) {\n      toast.error('Nenhuma rede configurada');\n      return;\n    }\n    await exportAllRedes(redesUnicas);\n    toast.success('Exportação de todas as redes concluída!');\n  };\n\n  useEffect(() => {\n    if (carteiras.length > 0) {\n      handleAtualizarRanking();\n    }\n  }, [unidade, baseCalculo, diaFiltro]);\n\n  const redesAgrupadas = groupByRede(rankingData, redes);\n  const redesUnicas = Object.keys(redesAgrupadas);\n\n  return (\n    <div>\n      <div className=\"bb-card\">\n        <div className=\"bb-card-header\">\n          <h2 className=\"bb-card-title\" data-testid=\"ranking-export-title\">Campo 8 — Ranking & Exportação</h2>\n          <p className=\"bb-card-subtitle\">Configure, visualize e exporte o ranking do desafio</p>\n        </div>\n\n        {/* Configurações */}\n        <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))', gap: '16px', marginBottom: '24px' }}>\n          <div>\n            <label style={{ display: 'block', marginBottom: '8px', fontWeight: 600, color: 'var(--bb-gray-700)', fontSize: '14px' }}>\n              Unidade do Ranking:\n            </label>\n            <select\n              value={unidade}\n              onChange={(e) => setUnidade(e.target.value)}\n              className=\"bb-input\"\n              data-testid=\"unidade-select\"\n            >\n              <option value=\"agencia\">Agência (Prefixo)</option>\n              <option value=\"carteiras\" disabled={!hasCarteirasData}>\n                Carteiras {!hasCarteirasData ? '(sem dados)' : ''}\n              </option>\n            </select>\n          </div>\n\n          <div>\n            <label style={{ display: 'block', marginBottom: '8px', fontWeight: 600, color: 'var(--bb-gray-700)', fontSize: '14px' }}>\n              Nome do Desafio:\n            </label>\n            <input\n              type=\"text\"\n              value={nomeDesafio}\n              onChange={(e) => setNomeDesafio(e.target.value)}\n              className=\"bb-input\"\n              placeholder=\"Ex: Desafio Q1 2025\"\n              data-testid=\"nome-desafio-input\"\n            />\n          </div>\n\n          <div>\n            <label style={{ display: 'block', marginBottom: '8px', fontWeight: 600, color: 'var(--bb-gray-700)', fontSize: '14px' }}>\n              Tema Visual:\n            </label>\n            <select\n              value={temaIndex}\n              onChange={(e) => setTemaIndex(parseInt(e.target.value))}\n              className=\"bb-input\"\n              data-testid=\"tema-select\"\n            >\n              {THEME_VARIANTS.map((t, idx) => (\n                <option key={idx} value={idx}>{t.name}</option>\n              ))}\n            </select>\n          </div>\n\n          {unidade === 'agencia' && (\n            <div>\n              <label style={{ display: 'block', marginBottom: '8px', fontWeight: 600, color: 'var(--bb-gray-700)', fontSize: '14px' }}>\n                Base de Cálculo:\n              </label>\n              <select\n                value={baseCalculo}\n                onChange={(e) => setBaseCalculo(e.target.value)}\n                className=\"bb-input\"\n                data-testid=\"base-calculo-select\"\n              >\n                <option value=\"carteira\">Por Carteira</option>\n                <option value=\"tipo\">Por Tipo</option>\n              </select>\n            </div>\n          )}\n\n          <div>\n            <label style={{ display: 'block', marginBottom: '8px', fontWeight: 600, color: 'var(--bb-gray-700)', fontSize: '14px' }}>\n              Filtrar até o Dia:\n            </label>\n            <select\n              value={diaFiltro || ''}\n              onChange={(e) => setDiaFiltro(e.target.value ? parseInt(e.target.value) : null)}\n              className=\"bb-input\"\n              data-testid=\"dia-filtro-select\"\n            >\n              <option value=\"\">Todos os dias</option>\n              {Array.from({ length: diasDesafio }, (_, i) => i + 1).map(dia => (\n                <option key={dia} value={dia}>Até Dia {dia}</option>\n              ))}\n            </select>\n          </div>\n        </div>\n\n        {/* Botões de Ação */}\n        <div style={{ display: 'flex', flexWrap: 'wrap', gap: '12px', marginBottom: '24px' }}>\n          <button\n            onClick={handleAtualizarRanking}\n            className=\"bb-btn bb-btn-primary\"\n            data-testid=\"atualizar-ranking-btn\"\n          >\n            <RefreshCw size={16} />\n            Atualizar Ranking\n          </button>\n          <button\n            onClick={handleExportPNGGeral}\n            className=\"bb-btn bb-btn-secondary\"\n            disabled={rankingData.length === 0}\n            data-testid=\"export-png-geral-btn\"\n          >\n            <Image size={16} />\n            Exportar PNG (Geral)\n          </button>\n          <button\n            onClick={handleExportPNGRedes}\n            className=\"bb-btn bb-btn-secondary\"\n            disabled={redesUnicas.length === 0}\n            data-testid=\"export-png-redes-btn\"\n          >\n            <Layers size={16} />\n            Exportar PNG (Todas as Redes)\n          </button>\n        </div>\n      </div>\n\n      {/* Área de Exportação */}\n      {rankingData.length > 0 && (\n        <div id=\"ranking-export-all\" className=\"export-container\" style={{ \n          background: 'white', \n          padding: numProdutos > 5 ? '20px' : '40px', \n          borderRadius: '12px',\n          width: 'fit-content',\n          minWidth: '100%'\n        }}>\n          {redesUnicas.map(rede => {\n            const dadosRede = redesAgrupadas[rede] || [];\n            if (dadosRede.length === 0) return null;\n\n            return (\n              <div key={rede} id={`ranking-rede-${rede.replace(/\\s+/g, '-')}`} style={{ marginBottom: '48px', pageBreakAfter: 'always' }}>\n                {/* Cabeçalho */}\n                <div style={{ \n                  background: tema.headerBg,\n                  color: tema.headerColor,\n                  padding: numProdutos > 5 ? '24px 20px' : '32px 24px',\n                  borderRadius: '12px 12px 0 0',\n                  marginBottom: '0'\n                }}>\n                  <h1 style={{ fontSize: headerFontSize, fontWeight: '700', marginBottom: '12px', textAlign: 'center', lineHeight: '1.2' }}>\n                    {nomeDesafio || 'Ranking de Desafios de Seguridade'}\n                  </h1>\n                  <p style={{ fontSize: subHeaderFontSize, fontWeight: '600', textAlign: 'center', color: tema.accentColor, lineHeight: '1.3' }}>\n                    Rede {rede}\n                  </p>\n                </div>\n\n                {/* Tabela de Ranking */}\n                <div style={{ overflowX: 'auto', border: '2px solid #e8eef7', borderTop: 'none', borderRadius: '0 0 12px 12px' }}>\n                  <table style={{ width: '100%', borderCollapse: 'collapse', background: 'white', fontSize }}>\n                    <thead>\n                      <tr style={{ background: 'var(--bb-blue)', color: 'white' }}>\n                        <th style={{ padding, textAlign: 'left', fontSize, fontWeight: '600', position: 'sticky', top: 0, background: 'var(--bb-blue)', whiteSpace: 'nowrap' }}>Pos.</th>\n                        <th style={{ padding, textAlign: 'left', fontSize, fontWeight: '600', position: 'sticky', top: 0, background: 'var(--bb-blue)', whiteSpace: 'nowrap' }}>Prefixo</th>\n                        <th style={{ padding, textAlign: 'left', fontSize, fontWeight: '600', position: 'sticky', top: 0, background: 'var(--bb-blue)', whiteSpace: 'nowrap' }}>Dependência</th>\n                        {unidade === 'carteiras' && (\n                          <th style={{ padding, textAlign: 'left', fontSize, fontWeight: '600', position: 'sticky', top: 0, background: 'var(--bb-blue)', whiteSpace: 'nowrap' }}>Carteira</th>\n                        )}\n                        {(unidade === 'agencia' ? produtosRanking : ['Total']).map((produto, pIdx) => {\n                          // Cores mais escuras para os cabeçalhos dos produtos\n                          const headerCores = [\n                            '#1976d2', // Azul\n                            '#f57c00', // Laranja\n                            '#388e3c', // Verde\n                            '#7b1fa2', // Roxo\n                            '#fbc02d', // Amarelo\n                            '#c2185b', // Rosa\n                            '#00796b', // Ciano\n                          ];\n                          const headerBg = headerCores[pIdx % headerCores.length];\n                          \n                          return (\n                            <React.Fragment key={produto}>\n                              <th style={{ padding, textAlign: 'right', fontSize, fontWeight: '600', position: 'sticky', top: 0, background: headerBg, whiteSpace: 'nowrap' }}>\n                                {produto}<br/>Orçado\n                              </th>\n                              <th style={{ padding, textAlign: 'right', fontSize, fontWeight: '600', position: 'sticky', top: 0, background: headerBg, whiteSpace: 'nowrap' }}>\n                                {produto}<br/>Realizado\n                              </th>\n                              <th style={{ padding, textAlign: 'right', fontSize, fontWeight: '600', position: 'sticky', top: 0, background: headerBg, whiteSpace: 'nowrap' }}>\n                                {produto}<br/>%\n                              </th>\n                            </React.Fragment>\n                          );\n                        })}\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {dadosRede.map((item, idx) => {\n                        // Cores alternadas mais visíveis para as linhas\n                        const rowBgColor = idx % 2 === 0 ? '#ffffff' : '#f0f4f8';\n                        \n                        // Array de cores suaves para cada produto\n                        const produtoCores = [\n                          { bg: '#e3f2fd', bgAlt: '#d1e7f7' }, // Azul claro\n                          { bg: '#fff3e0', bgAlt: '#ffe4c4' }, // Laranja claro\n                          { bg: '#e8f5e9', bgAlt: '#d4ead5' }, // Verde claro\n                          { bg: '#f3e5f5', bgAlt: '#e1d4e3' }, // Roxo claro\n                          { bg: '#fff9c4', bgAlt: '#ffeb99' }, // Amarelo claro\n                          { bg: '#fce4ec', bgAlt: '#f8d0dd' }, // Rosa claro\n                          { bg: '#e0f2f1', bgAlt: '#c8e6e4' }, // Ciano claro\n                        ];\n                        \n                        return (\n                          <tr key={idx} style={{ borderBottom: '1px solid #e8eef7', background: rowBgColor }}>\n                            <td style={{ padding, fontSize, fontWeight: '600', background: rowBgColor }}>{idx + 1}º</td>\n                            <td style={{ padding, fontSize, background: rowBgColor }}>{item.prefixo}</td>\n                            <td style={{ padding, fontSize, background: rowBgColor }}>{item.agencia}</td>\n                            {unidade === 'carteiras' && (\n                              <td style={{ padding, fontSize, background: rowBgColor }}>{item.carteira}</td>\n                            )}\n                            {(unidade === 'agencia' ? produtosRanking : ['Total']).map((produto, pIdx) => {\n                              // Usa uma cor diferente para cada produto, com variação para linhas alternadas\n                              const corProduto = produtoCores[pIdx % produtoCores.length];\n                              const bgProduto = idx % 2 === 0 ? corProduto.bg : corProduto.bgAlt;\n                              \n                              return (\n                                <React.Fragment key={produto}>\n                                  <td style={{ \n                                    padding, \n                                    fontSize, \n                                    textAlign: 'right',\n                                    fontWeight: '600',\n                                    background: bgProduto\n                                  }}>\n                                    {formatCurrency(item.orcadosPorProduto?.[produto] || 0)}\n                                  </td>\n                                  <td style={{ \n                                    padding, \n                                    fontSize, \n                                    textAlign: 'right',\n                                    background: bgProduto\n                                  }}>\n                                    {formatCurrency(item.valores[produto] || 0)}\n                                  </td>\n                                  <td style={{ \n                                    padding, \n                                    fontSize, \n                                    textAlign: 'right',\n                                    fontWeight: '600',\n                                    color: getAtingimentoColor(item.atingimentos[produto] || 0),\n                                    background: bgProduto\n                                  }}>\n                                    {formatPercentage(item.atingimentos[produto] || 0)}\n                                  </td>\n                                </React.Fragment>\n                              );\n                            })}\n                          </tr>\n                        );\n                      })}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      )}\n\n      {rankingData.length === 0 && (\n        <div className=\"bb-card\">\n          <div style={{ padding: '32px', textAlign: 'center', color: 'var(--bb-gray-600)' }}>\n            <FileDown size={48} style={{ margin: '0 auto 16px', opacity: 0.5 }} />\n            <p style={{ fontSize: '16px' }}>Clique em \"Atualizar Ranking\" para gerar os dados</p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RankingExport;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}