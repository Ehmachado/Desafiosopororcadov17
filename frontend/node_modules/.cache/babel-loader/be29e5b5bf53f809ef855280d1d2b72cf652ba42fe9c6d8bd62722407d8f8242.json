{"ast":null,"code":"var _jsxFileName = \"/app/frontend/src/components/ColumnMapper.jsx\";\nimport React from 'react';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ColumnMapper = ({\n  targetColumns,\n  detectedMapping,\n  availableColumns,\n  onMappingChange\n}) => {\n  const handleColumnChange = (targetCol, selectedIndex) => {\n    onMappingChange({\n      ...detectedMapping,\n      [targetCol]: selectedIndex === 'none' ? undefined : parseInt(selectedIndex)\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: '24px',\n      padding: '16px',\n      background: 'var(--bb-gray-50)',\n      borderRadius: '8px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        fontSize: '16px',\n        fontWeight: 600,\n        color: 'var(--bb-blue)',\n        marginBottom: '12px'\n      },\n      children: \"Mapeamento de Colunas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))',\n        gap: '12px'\n      },\n      children: targetColumns.map(targetCol => {\n        var _detectedMapping$targ;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginBottom: '6px',\n              fontSize: '13px',\n              fontWeight: 500,\n              color: 'var(--bb-gray-700)'\n            },\n            children: [targetCol, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: ((_detectedMapping$targ = detectedMapping[targetCol]) === null || _detectedMapping$targ === void 0 ? void 0 : _detectedMapping$targ.toString()) || 'none',\n            onValueChange: value => handleColumnChange(targetCol, value),\n            children: [/*#__PURE__*/_jsxDEV(SelectTrigger, {\n              children: /*#__PURE__*/_jsxDEV(SelectValue, {\n                placeholder: \"Selecione a coluna\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(SelectContent, {\n              children: [/*#__PURE__*/_jsxDEV(SelectItem, {\n                value: \"none\",\n                children: \"Nenhuma\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 17\n              }, this), availableColumns.map((col, idx) => /*#__PURE__*/_jsxDEV(SelectItem, {\n                value: idx.toString(),\n                children: [\"Col \", idx + 1, \": \", col.substring(0, 30), col.length > 30 ? '...' : '']\n              }, idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this)]\n        }, targetCol, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = ColumnMapper;\nexport default ColumnMapper;\nvar _c;\n$RefreshReg$(_c, \"ColumnMapper\");","map":{"version":3,"names":["React","Select","SelectContent","SelectItem","SelectTrigger","SelectValue","jsxDEV","_jsxDEV","ColumnMapper","targetColumns","detectedMapping","availableColumns","onMappingChange","handleColumnChange","targetCol","selectedIndex","undefined","parseInt","style","marginBottom","padding","background","borderRadius","children","fontSize","fontWeight","color","fileName","_jsxFileName","lineNumber","columnNumber","display","gridTemplateColumns","gap","map","_detectedMapping$targ","value","toString","onValueChange","placeholder","col","idx","substring","length","_c","$RefreshReg$"],"sources":["/app/frontend/src/components/ColumnMapper.jsx"],"sourcesContent":["import React from 'react';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\n\nconst ColumnMapper = ({ targetColumns, detectedMapping, availableColumns, onMappingChange }) => {\n  const handleColumnChange = (targetCol, selectedIndex) => {\n    onMappingChange({\n      ...detectedMapping,\n      [targetCol]: selectedIndex === 'none' ? undefined : parseInt(selectedIndex)\n    });\n  };\n\n  return (\n    <div style={{ marginBottom: '24px', padding: '16px', background: 'var(--bb-gray-50)', borderRadius: '8px' }}>\n      <h3 style={{ fontSize: '16px', fontWeight: 600, color: 'var(--bb-blue)', marginBottom: '12px' }}>\n        Mapeamento de Colunas\n      </h3>\n      <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))', gap: '12px' }}>\n        {targetColumns.map(targetCol => (\n          <div key={targetCol}>\n            <label style={{ display: 'block', marginBottom: '6px', fontSize: '13px', fontWeight: 500, color: 'var(--bb-gray-700)' }}>\n              {targetCol}:\n            </label>\n            <Select\n              value={detectedMapping[targetCol]?.toString() || 'none'}\n              onValueChange={(value) => handleColumnChange(targetCol, value)}\n            >\n              <SelectTrigger>\n                <SelectValue placeholder=\"Selecione a coluna\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"none\">Nenhuma</SelectItem>\n                {availableColumns.map((col, idx) => (\n                  <SelectItem key={idx} value={idx.toString()}>\n                    Col {idx + 1}: {col.substring(0, 30)}{col.length > 30 ? '...' : ''}\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ColumnMapper;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}