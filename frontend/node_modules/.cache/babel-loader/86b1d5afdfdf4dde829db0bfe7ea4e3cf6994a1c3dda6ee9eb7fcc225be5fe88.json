{"ast":null,"code":"\"use client\";\n\nimport _objectSpread from \"/app/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport * as t from \"react\";\nvar M = (e, i, s, u, m, a, l, h) => {\n  let d = document.documentElement,\n    w = [\"light\", \"dark\"];\n  function p(n) {\n    (Array.isArray(e) ? e : [e]).forEach(y => {\n      let k = y === \"class\",\n        S = k && a ? m.map(f => a[f] || f) : m;\n      k ? (d.classList.remove(...S), d.classList.add(a && a[n] ? a[n] : n)) : d.setAttribute(y, n);\n    }), R(n);\n  }\n  function R(n) {\n    h && w.includes(n) && (d.style.colorScheme = n);\n  }\n  function c() {\n    return window.matchMedia(\"(prefers-color-scheme: dark)\").matches ? \"dark\" : \"light\";\n  }\n  if (u) p(u);else try {\n    let n = localStorage.getItem(i) || s,\n      y = l && n === \"system\" ? c() : n;\n    p(y);\n  } catch (n) {}\n};\nvar b = [\"light\", \"dark\"],\n  I = \"(prefers-color-scheme: dark)\",\n  O = typeof window == \"undefined\",\n  x = t.createContext(void 0),\n  U = {\n    setTheme: e => {},\n    themes: []\n  },\n  z = () => {\n    var e;\n    return (e = t.useContext(x)) != null ? e : U;\n  },\n  J = e => t.useContext(x) ? t.createElement(t.Fragment, null, e.children) : t.createElement(V, _objectSpread({}, e)),\n  N = [\"light\", \"dark\"],\n  V = _ref => {\n    let {\n      forcedTheme: e,\n      disableTransitionOnChange: i = !1,\n      enableSystem: s = !0,\n      enableColorScheme: u = !0,\n      storageKey: m = \"theme\",\n      themes: a = N,\n      defaultTheme: l = s ? \"system\" : \"light\",\n      attribute: h = \"data-theme\",\n      value: d,\n      children: w,\n      nonce: p,\n      scriptProps: R\n    } = _ref;\n    let [c, n] = t.useState(() => H(m, l)),\n      [T, y] = t.useState(() => c === \"system\" ? E() : c),\n      k = d ? Object.values(d) : a,\n      S = t.useCallback(o => {\n        let r = o;\n        if (!r) return;\n        o === \"system\" && s && (r = E());\n        let v = d ? d[r] : r,\n          C = i ? W(p) : null,\n          P = document.documentElement,\n          L = g => {\n            g === \"class\" ? (P.classList.remove(...k), v && P.classList.add(v)) : g.startsWith(\"data-\") && (v ? P.setAttribute(g, v) : P.removeAttribute(g));\n          };\n        if (Array.isArray(h) ? h.forEach(L) : L(h), u) {\n          let g = b.includes(l) ? l : null,\n            D = b.includes(r) ? r : g;\n          P.style.colorScheme = D;\n        }\n        C == null || C();\n      }, [p]),\n      f = t.useCallback(o => {\n        let r = typeof o == \"function\" ? o(c) : o;\n        n(r);\n        try {\n          localStorage.setItem(m, r);\n        } catch (v) {}\n      }, [c]),\n      A = t.useCallback(o => {\n        let r = E(o);\n        y(r), c === \"system\" && s && !e && S(\"system\");\n      }, [c, e]);\n    t.useEffect(() => {\n      let o = window.matchMedia(I);\n      return o.addListener(A), A(o), () => o.removeListener(A);\n    }, [A]), t.useEffect(() => {\n      let o = r => {\n        r.key === m && (r.newValue ? n(r.newValue) : f(l));\n      };\n      return window.addEventListener(\"storage\", o), () => window.removeEventListener(\"storage\", o);\n    }, [f]), t.useEffect(() => {\n      S(e != null ? e : c);\n    }, [e, c]);\n    let Q = t.useMemo(() => ({\n      theme: c,\n      setTheme: f,\n      forcedTheme: e,\n      resolvedTheme: c === \"system\" ? T : c,\n      themes: s ? [...a, \"system\"] : a,\n      systemTheme: s ? T : void 0\n    }), [c, f, e, T, s, a]);\n    return t.createElement(x.Provider, {\n      value: Q\n    }, t.createElement(_, {\n      forcedTheme: e,\n      storageKey: m,\n      attribute: h,\n      enableSystem: s,\n      enableColorScheme: u,\n      defaultTheme: l,\n      value: d,\n      themes: a,\n      nonce: p,\n      scriptProps: R\n    }), w);\n  },\n  _ = t.memo(_ref2 => {\n    let {\n      forcedTheme: e,\n      storageKey: i,\n      attribute: s,\n      enableSystem: u,\n      enableColorScheme: m,\n      defaultTheme: a,\n      value: l,\n      themes: h,\n      nonce: d,\n      scriptProps: w\n    } = _ref2;\n    let p = JSON.stringify([s, i, a, e, h, l, u, m]).slice(1, -1);\n    return t.createElement(\"script\", _objectSpread(_objectSpread({}, w), {}, {\n      suppressHydrationWarning: !0,\n      nonce: typeof window == \"undefined\" ? d : \"\",\n      dangerouslySetInnerHTML: {\n        __html: \"(\".concat(M.toString(), \")(\").concat(p, \")\")\n      }\n    }));\n  }),\n  H = (e, i) => {\n    if (O) return;\n    let s;\n    try {\n      s = localStorage.getItem(e) || void 0;\n    } catch (u) {}\n    return s || i;\n  },\n  W = e => {\n    let i = document.createElement(\"style\");\n    return e && i.setAttribute(\"nonce\", e), i.appendChild(document.createTextNode(\"*,*::before,*::after{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}\")), document.head.appendChild(i), () => {\n      window.getComputedStyle(document.body), setTimeout(() => {\n        document.head.removeChild(i);\n      }, 1);\n    };\n  },\n  E = e => (e || (e = window.matchMedia(I)), e.matches ? \"dark\" : \"light\");\nexport { J as ThemeProvider, z as useTheme };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}